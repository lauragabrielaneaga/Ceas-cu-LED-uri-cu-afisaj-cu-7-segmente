;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [21] void usart0_rx_isr(void)
; 0000 0049 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 004A char status, data;
; 0000 004B status = UCSR0A;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 004C data = UDR0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 004D if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN)) == 0) {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 004E rx_buffer0[rx_wr_index0++] = data;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 004F #if RX_BUFFER_SIZE0 == 256
; 0000 0050 // special case for receiver buffer size=256
; 0000 0051 if (++rx_counter0 == 0) rx_buffer_overflow0 = 1;
; 0000 0052 #else
; 0000 0053 if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0 = 0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0054 if (++rx_counter0 == RX_BUFFER_SIZE0)
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0055 {
; 0000 0056 rx_counter0=0;
;PCODE: $00000026 VOL: 0
; 0000 0057 rx_buffer_overflow0=1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0058 }
; 0000 0059 #endif
; 0000 005A }
;PCODE: $00000029 VOL: 0
; 0000 005B }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;char getchar(void)
; 0000 0062 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0063 char data;
; 0000 0064 while (rx_counter0 == 0);
;PCODE: $00000031 VOL: 0
;	data -> R17
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0065 data=rx_buffer0[rx_rd_index0++];
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0066 #if RX_BUFFER_SIZE0 != 256
; 0000 0067 if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0 = 0;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0068 #endif
; 0000 0069 #asm("cli")
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006A --rx_counter0;
;PCODE: $00000042 VOL: 0
; 0000 006B #asm("sei")
;PCODE: $00000043 VOL: 0
; 0000 006C return data;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 006D }
;PCODE: $00000047 VOL: 0
;interrupt [23] void usart0_tx_isr(void)
; 0000 007D {
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007E if (tx_counter0)
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 007F {
; 0000 0080 --tx_counter0;
;PCODE: $0000004C VOL: 0
; 0000 0081 UDR0=tx_buffer0[tx_rd_index0++];
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0082 #if TX_BUFFER_SIZE0 != 256
; 0000 0083 if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0084 #endif
; 0000 0085 }
;PCODE: $00000057 VOL: 0
; 0000 0086 }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;void putchar(char c)
; 0000 008D {
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008E while (tx_counter0 == TX_BUFFER_SIZE0);
;PCODE: $0000005E VOL: 0
;	c -> Y+0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 008F #asm("cli")
;PCODE: $00000065 VOL: 0
; 0000 0090 if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0))
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0091 {
; 0000 0092 tx_buffer0[tx_wr_index0++]=c;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0093 #if TX_BUFFER_SIZE0 != 256
; 0000 0094 if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0095 #endif
; 0000 0096 ++tx_counter0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0097 }
; 0000 0098 else
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0099 UDR0=c;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 009A #asm("sei")
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 009B }
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0

	.DSEG
;interrupt [14] void timer1_compa_isr(void)
; 0000 00C9 {

	.CSEG
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00CA //LED1 = ~LED1; // invert LED
; 0000 00CB 
; 0000 00CC currentTime.secunda ++;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00CD cronometruTime.c_secunda ++;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00CE 
; 0000 00CF if (currentTime.secunda >= 60) {
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00D0 currentTime.secunda = 0;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00D1 currentTime.minut ++;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00D2 }
; 0000 00D3 if (currentTime.minut >= 60) {
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 00D4 currentTime.minut = 0;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00D5 currentTime.ora ++;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00D6 }
; 0000 00D7 if (currentTime.ora >= 24) {
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00D8 currentTime.ora = 0;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00D9 currentTime.zi ++;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00DA }
; 0000 00DB 
; 0000 00DC // luni cu 31 de zile
; 0000 00DD if (currentTime.luna == 1 || currentTime.luna == 3 ||currentTime.luna == 5 ||currentTime.luna == 7 ||currentTime.luna == 8 || currentTime.luna == 10 || currentTime.luna == 12) {
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00DE if (currentTime.zi > 31) {
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00DF currentTime.zi = 1;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00E0 currentTime.luna ++;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00E1 }
; 0000 00E2 }
;PCODE: $000000E5 VOL: 0
; 0000 00E3 
; 0000 00E4 // luni cu 30 de zile
; 0000 00E5 if (currentTime.luna == 4 || currentTime.luna == 6 ||currentTime.luna == 9 ||currentTime.luna == 11) {
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00E6 if (currentTime.zi > 30) {
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00E7 currentTime.zi = 1;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00E8 currentTime.luna ++;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00E9 }
; 0000 00EA }
;PCODE: $00000106 VOL: 0
; 0000 00EB 
; 0000 00EC // februarie
; 0000 00ED if (currentTime.luna == 2) {
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00EE if (currentTime.an % 4 == 0) { // an bisect
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00EF if (currentTime.zi > 29) {
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00F0 currentTime.zi = 1;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00F1 currentTime.luna ++;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00F2 }
; 0000 00F3 } else if (currentTime.zi > 28) {
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00F4 currentTime.zi = 1;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00F5 currentTime.luna ++;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00F6 }
; 0000 00F7 }
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00F8 
; 0000 00F9 if (currentTime.luna > 12) {
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00FA currentTime.luna = 1;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00FB currentTime.an ++;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00FC }
; 0000 00FD 
; 0000 00FE 
; 0000 00FF //Cronometru
; 0000 0100 if (cronometruTime.c_secunda >= 60) {
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0101 cronometruTime.c_secunda = 0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0102 cronometruTime.c_minut ++;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0103 }
; 0000 0104 if (cronometruTime.c_minut >= 60) {
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0105 cronometruTime.c_minut = 0;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0106 cronometruTime.c_ora ++;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0107 }
; 0000 0108 if (cronometruTime.c_ora >= 24) {
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0109 cronometruTime.c_ora = 0;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 010A }
; 0000 010B 
; 0000 010C }
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;void afisare(uint8_t param1, uint8_t param2, uint8_t param3)
; 0000 0110 {
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0111 unsigned int DD0, DD1, DD2, DD3, DD4, DD5;
; 0000 0112 int i;
; 0000 0113 DD0 = param1 / 10;      // led 1
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;	param1 -> Y+16
;	param2 -> Y+15
;	param3 -> Y+14
;	DD0 -> R16,R17
;	DD1 -> R18,R19
;	DD2 -> R20,R21
;	DD3 -> Y+12
;	DD4 -> Y+10
;	DD5 -> Y+8
;	i -> Y+6
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0114 DD0 = cifra[DD0];
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 0115 
; 0000 0116 DD1 = param1 % 10;      // led 2
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0117 DD1 = cifra[DD1];
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0118 
; 0000 0119 DD2 = param2 / 10;      // led 3
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 011A DD2 = cifra[DD2];
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 011B 
; 0000 011C DD3 = param2 % 10;      // led 4
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 011D DD3 = cifra[DD3];
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 011E 
; 0000 011F DD4 = param3 / 10;      // led 5
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 0120 DD4 = cifra[DD4];
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0121 
; 0000 0122 DD5 = param3 % 10;      // led 6
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0123 DD5 = cifra[DD5];
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 0124 
; 0000 0125 //multiplexare
; 0000 0126 for (i = 0; i<=10; i++) {
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0127 PORTA = DD0;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0128 afisaj_1 = 1;      // Selectie afisaj 1
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0129 afisaj_2 = 0;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 012A afisaj_3 = 0;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 012B afisaj_4 = 0;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 012C afisaj_5 = 0;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 012D afisaj_6 = 0;
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 012E delay_ms(1);
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 012F 
; 0000 0130 PORTA = DD1;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0131 afisaj_1 = 0;      // Selectie afisaj 2
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0132 afisaj_2 = 1;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0133 afisaj_3 = 0;
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 0134 afisaj_4 = 0;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0135 afisaj_5 = 0;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 0136 afisaj_6 = 0;
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0137 delay_ms(1);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 0138 
; 0000 0139 PORTA = DD2;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 013A afisaj_1 = 0;      // Selectie afisaj 3
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 013B afisaj_2 = 0;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 013C afisaj_3 = 1;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 013D afisaj_4 = 0;
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 013E afisaj_5 = 0;
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 013F afisaj_6 = 0;
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0140 delay_ms(1);
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0141 
; 0000 0142 PORTA = DD3;
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0143 afisaj_1 = 0;      // Selectie afisaj 4
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0144 afisaj_2 = 0;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0145 afisaj_3 = 0;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 0146 afisaj_4 = 1;
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0147 afisaj_5 = 0;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 0148 afisaj_6 = 0;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 0149 delay_ms(1);
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 014A 
; 0000 014B PORTA = DD4;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 014C afisaj_1 = 0;      // Selectie afisaj 5
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 014D afisaj_2 = 0;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 014E afisaj_3 = 0;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 014F afisaj_4 = 0;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0150 afisaj_5 = 1;
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0151 afisaj_6 = 0;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0152 delay_ms(1);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0153 
; 0000 0154 PORTA = DD5;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0155 afisaj_1 = 0;      // Selectie afisaj 6
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0156 afisaj_2 = 0;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0157 afisaj_3 = 0;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0158 afisaj_4 = 0;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 0159 afisaj_5 = 0;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 015A afisaj_6 = 1;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 015B delay_ms(1);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 015C }
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 015D }
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;void main (void)
; 0000 0164 {
;PCODE: $0000021A VOL: 0
; 0000 0165 unsigned char i, k = 0;
; 0000 0166 unsigned int DD0, DD1, DD2, DD3, DD4, DD5;
; 0000 0167 static int c0, c1, c2, c3, c4, c5;
; 0000 0168 
; 0000 0169 Init_initController();  // this must be the first "init" action/call!
;PCODE: $0000021B VOL: 0
;	i -> R17
;	k -> R16
;	DD0 -> R18,R19
;	DD1 -> R20,R21
;	DD2 -> Y+6
;	DD3 -> Y+4
;	DD4 -> Y+2
;	DD5 -> Y+0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 016A #asm("sei")             // enable interrupts
;PCODE: $0000021F VOL: 0
; 0000 016B LED1 = 1;               // initial state, will be changed by timer 1
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 016C 
; 0000 016D while (TRUE) {
;PCODE: $00000222 VOL: 0
; 0000 016E wdogtrig();            // call often else processor will reset
;PCODE: $00000223 VOL: 0
; 0000 016F 
; 0000 0170 
; 0000 0171 // CALENDAR
; 0000 0172 if (SW4 == 0) {
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0173 LED1 = 0;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0174 LED2 = 1;
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0175 LED3 = 0;
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0176 LED4 = 0;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 0177 
; 0000 0178 delay_ms(30);   // debounce switch
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0179 if (SW4 == 0) {
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 017A while (SW4 == 0) wdogtrig();    // wait for release
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 017B PORTA = 0x00;    // Turn OFF LEDs on PORTA
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 017C 
; 0000 017D do {
;PCODE: $0000023E VOL: 0
; 0000 017E afisare(currentTime.zi, currentTime.luna, currentTime.an);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 017F 
; 0000 0180 if (SW3 == 0) break;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0181 if (SW5 == 0) break;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0182 if (SW6 == 0) break;
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 0183 
; 0000 0184 if (SW7 == 0) {
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0185 delay_ms(500);
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0186 if (SW7 == 0) {
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0187 while (SW7 == 0) {
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0188 currentTime.luna ++;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0189 afisare(currentTime.zi, currentTime.luna, currentTime.an);
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 018A 
; 0000 018B if (SW3 == 0) break;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 018C if (SW4 == 0) break;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 018D if (SW5 == 0) break;
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 018E if (SW6 == 0) break;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 018F }
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0190 }
; 0000 0191 else {
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0192 wdogtrig(); currentTime.luna++;
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 0193 
; 0000 0194 do {
;PCODE: $0000028F VOL: 0
; 0000 0195 afisare(currentTime.zi, currentTime.luna, currentTime.an);
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 0196 
; 0000 0197 if (SW3 == 0) break;
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 0198 if (SW4 == 0) break;
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 0199 if (SW5 == 0) break;
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 019A if (SW6 == 0) break;
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 019B if (SW7 == 0) break;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 019C if (SW8 == 0) break;
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 019D 
; 0000 019E } while(1);
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 019F }
;PCODE: $000002B9 VOL: 0
; 0000 01A0 }
; 0000 01A1 
; 0000 01A2 if (SW8 == 0) {
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
; 0000 01A3 delay_ms(30);
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01A4 if (SW8 == 0) {
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 01A5 while (SW8 == 0) {
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 01A6 currentTime.zi ++;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 01A7 delay_ms(150);
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 01A8 afisare(currentTime.zi, currentTime.luna, currentTime.an);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01A9 
; 0000 01AA if (SW3 == 0) break;
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 01AB if (SW4 == 0) break;
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 01AC if (SW5 == 0) break;
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01AD if (SW6 == 0) break;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0000 01AE }
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 01AF }
; 0000 01B0 }
;PCODE: $000002EF VOL: 0
; 0000 01B1 } while(1);          // endless loop
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 01B2 }
; 0000 01B3 }
;PCODE: $000002F4 VOL: 0
; 0000 01B4 
; 0000 01B5 
; 0000 01B6 //ALARMA
; 0000 01B7 
; 0000 01B8 if (SW5 == 0) {
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 01B9 LED1 = 0;
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 01BA LED2 = 0;
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 01BB LED3 = 1;
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 01BC LED4 = 0;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 01BD 
; 0000 01BE delay_ms(30);   // debounce switch
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 01BF if (SW5 == 0) {
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 01C0 while (SW5 == 0) wdogtrig();    // wait for release
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 01C1 PORTA = cifra[10];    // Afisam caracterul A
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 01C2 afisaj_1 = 1;      // Selectie afisaj 1
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 01C3 afisaj_2 = 0;
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 01C4 afisaj_3 = 0;
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 01C5 afisaj_4 = 0;
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 01C6 afisaj_5 = 0;
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 01C7 afisaj_6 = 0;
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 01C8 
; 0000 01C9 delay_ms(1000);
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 01CA 
; 0000 01CB do {
;PCODE: $0000031F VOL: 0
; 0000 01CC afisare(alarmaTime.a_ora, alarmaTime.a_minut, alarmaTime.a_secunda);
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 01CD 
; 0000 01CE if (SW3 == 0) break;
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 01CF if (SW4 == 0) break;
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 01D0 if (SW6 == 0) break;
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 01D1 if (SW7 == 0) {
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0000 01D2 delay_ms(500);
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 01D3 if (SW7 == 0) {
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
; 0000 01D4 while (SW7 == 0) {
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 01D5 alarmaTime.a_minut++;
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 01D6 
; 0000 01D7 if (alarmaTime.a_minut >= 60) {
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01D8 alarmaTime.a_minut = 0;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 01D9 alarmaTime.a_ora ++;
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 01DA }
; 0000 01DB 
; 0000 01DC if (alarmaTime.a_ora >= 24) {
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
; 0000 01DD alarmaTime.a_ora = 0;
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 01DE }
; 0000 01DF 
; 0000 01E0 minut_alarma = alarmaTime.a_minut;
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 01E1 ok=0;
;PCODE: $0000035E VOL: 0
; 0000 01E2 afisare(alarmaTime.a_ora, alarmaTime.a_minut, alarmaTime.a_secunda);
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01E3 
; 0000 01E4 if (SW3 == 0)break;
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
; 0000 01E5 if (SW4 == 0)break;
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 01E6 if (SW6 == 0)break;
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 01E7 // if(SW5 == 0)break;
; 0000 01E8 }
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 01E9 }
; 0000 01EA else {
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0000 01EB wdogtrig();
;PCODE: $0000037A VOL: 0
; 0000 01EC alarmaTime.a_minut++;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 01ED 
; 0000 01EE if (alarmaTime.a_minut >= 60) {
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 01EF alarmaTime.a_minut = 0;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
; 0000 01F0 alarmaTime.a_ora ++;
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 01F1 }
; 0000 01F2 
; 0000 01F3 if (alarmaTime.a_ora >= 24) {
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 01F4 alarmaTime.a_ora = 0;
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 01F5 }
; 0000 01F6 
; 0000 01F7 minut_alarma = alarmaTime.a_minut;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 01F8 ok=0;
;PCODE: $00000396 VOL: 0
; 0000 01F9 
; 0000 01FA do {
;PCODE: $00000397 VOL: 0
; 0000 01FB afisare(alarmaTime.a_ora, alarmaTime.a_minut, alarmaTime.a_secunda);
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 01FC 
; 0000 01FD if (SW3 == 0) break;
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
; 0000 01FE if (SW4 == 0) break;
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 01FF if (SW5 == 0) break;
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 0200 if (SW6 == 0) break;
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 0201 if (SW8 == 0) break;
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0202 if (SW7 == 0) break;
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 0203 } while(1);
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0204 }
;PCODE: $000003C1 VOL: 0
; 0000 0205 }
; 0000 0206 
; 0000 0207 if (SW8 == 0) {
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 0208 delay_ms(30);
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0209 if (SW8 == 0) {
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 020A while (SW8 == 0) {
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 020B alarmaTime.a_ora ++;
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 020C 
; 0000 020D if (alarmaTime.a_minut >= 60) {
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
; 0000 020E alarmaTime.a_minut = 0;
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
; 0000 020F alarmaTime.a_ora ++;
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 0210 }
; 0000 0211 
; 0000 0212 if (alarmaTime.a_ora >= 24) {
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0213 alarmaTime.a_ora = 0;
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 0214 
; 0000 0215 }
; 0000 0216 
; 0000 0217 delay_ms(150);
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 0218 ora_alarma = alarmaTime.a_ora;
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0219 ok=0;
;PCODE: $000003EA VOL: 0
; 0000 021A afisare(alarmaTime.a_ora, alarmaTime.a_minut, alarmaTime.a_secunda);
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 021B 
; 0000 021C if (SW3 == 0) break;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 021D if (SW4 == 0) break;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
; 0000 021E if (SW5 == 0) break;
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 021F if (SW6 == 0) break;
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 0220 }
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
; 0000 0221 }
; 0000 0222 }
;PCODE: $00000409 VOL: 0
; 0000 0223 } while(1);          // endless loop
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 0224 }
; 0000 0225 }
;PCODE: $0000040E VOL: 0
; 0000 0226 
; 0000 0227 
; 0000 0228 //CRONOMETRU
; 0000 0229 
; 0000 022A if (SW6 == 0) {
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 022B LED1 = 0;
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 022C LED2 = 0;
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 022D LED3 = 0;
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 022E LED4 = 1;
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 022F 
; 0000 0230 delay_ms(30);   // debounce switch
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
; 0000 0231 if (SW6 == 0) {
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 0232 while (SW6 == 0) wdogtrig();    // wait for release
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 0233 k++;
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 0234 
; 0000 0235 PORTA = 0x39;      //Afisam caracterul C
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
; 0000 0236 afisaj_1 = 1;      // Selectie afisaj 1
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
; 0000 0237 afisaj_2 = 0;
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
; 0000 0238 afisaj_3 = 0;
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
; 0000 0239 afisaj_4 = 0;
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 023A afisaj_5 = 0;
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
; 0000 023B afisaj_6 = 0;
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
; 0000 023C 
; 0000 023D 
; 0000 023E //Pornire cronometru
; 0000 023F if (k == 2) {
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 0240 cronometruTime.c_ora = 0;
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 0241 cronometruTime.c_minut = 0;
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
; 0000 0242 cronometruTime.c_secunda = 0;
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0000 0243 
; 0000 0244 do {
;PCODE: $00000443 VOL: 0
; 0000 0245 afisare(cronometruTime.c_ora, cronometruTime.c_minut, cronometruTime.c_secunda);
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
; 0000 0246 
; 0000 0247 if (SW3 == 0) break;
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 0248 if (SW4 == 0) break;
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0249 if (SW5 == 0) break;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
; 0000 024A if (SW6 == 0) break;
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
; 0000 024B if (SW7 == 0) break;
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 024C if (SW8 == 0) break;
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0000 024D } while(1);          // endless loop
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0000 024E }
; 0000 024F 
; 0000 0250 
; 0000 0251 //Oprire cronometru
; 0000 0252 if (k == 3) {
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 0253 k = 0;
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0000 0254 
; 0000 0255 c0 = cronometruTime.c_ora/10;         // led 1
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
; 0000 0256 c1 = cronometruTime.c_ora%10;         // led 2
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 0257 c2 = cronometruTime.c_minut/10;       // led 3
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 0258 c3 = cronometruTime.c_minut%10;       // led 4
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 0259 c4 = cronometruTime.c_secunda/10;     // led 5
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
; 0000 025A c5 = cronometruTime.c_secunda%10;     // led 6
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 025B 
; 0000 025C do {
;PCODE: $00000495 VOL: 0
; 0000 025D DD0 = cifra[c0];
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 025E DD1 = cifra[c1];
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
; 0000 025F DD2 = cifra[c2];
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0000 0260 DD3 = cifra[c3];
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
; 0000 0261 DD4 = cifra[c4];
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
; 0000 0262 DD5 = cifra[c5];
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 0263 
; 0000 0264 for (i = 0; i <= 10; i++) {
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0000 0265 PORTA = DD0;
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
; 0000 0266 afisaj_1 = 1;      // Selectie afisaj 1
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 0267 afisaj_2 = 0;
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
; 0000 0268 afisaj_3 = 0;
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 0269 afisaj_4 = 0;
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
; 0000 026A afisaj_5 = 0;
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 026B afisaj_6 = 0;
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 026C delay_ms(1);
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
; 0000 026D 
; 0000 026E PORTA = DD1;
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
; 0000 026F afisaj_1 = 0;      // Selectie afisaj 2
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 0270 afisaj_2 = 1;
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
; 0000 0271 afisaj_3 = 0;
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0000 0272 afisaj_4 = 0;
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 0273 afisaj_5 = 0;
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
; 0000 0274 afisaj_6 = 0;
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
; 0000 0275 delay_ms(1);
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0000 0276 
; 0000 0277 PORTA = DD2;
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0000 0278 afisaj_1 = 0;      // Selectie afisaj 3
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0000 0279 afisaj_2 = 0;
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0000 027A afisaj_3 = 1;
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0000 027B afisaj_4 = 0;
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 027C afisaj_5 = 0;
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0000 027D afisaj_6 = 0;
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
; 0000 027E delay_ms(1);
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
; 0000 027F 
; 0000 0280 PORTA = DD3;
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
; 0000 0281 afisaj_1 = 0;      // Selectie afisaj 4
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 0282 afisaj_2 = 0;
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0000 0283 afisaj_3 = 0;
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 0284 afisaj_4 = 1;
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 0285 afisaj_5 = 0;
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 0286 afisaj_6 = 0;
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0000 0287 delay_ms(1);
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 0288 
; 0000 0289 PORTA = DD4;
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
; 0000 028A afisaj_1 = 0;      // Selectie afisaj 5
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
; 0000 028B afisaj_2 = 0;
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 028C afisaj_3 = 0;
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
; 0000 028D afisaj_4 = 0;
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
; 0000 028E afisaj_5 = 1;
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
; 0000 028F afisaj_6 = 0;
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
; 0000 0290 delay_ms(1);
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 0291 
; 0000 0292 PORTA = DD5;
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
; 0000 0293 afisaj_1 = 0;      // Selectie afisaj 6
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 0294 afisaj_2 = 0;
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
; 0000 0295 afisaj_3 = 0;
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
; 0000 0296 afisaj_4 = 0;
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
; 0000 0297 afisaj_5 = 0;
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
; 0000 0298 afisaj_6 = 1;
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
; 0000 0299 delay_ms(1);
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
; 0000 029A }
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
; 0000 029B 
; 0000 029C if (SW3 == 0) break;
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
; 0000 029D if (SW4 == 0) break;
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
; 0000 029E if (SW5 == 0) break;
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
; 0000 029F if (SW6 == 0) break;
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 02A0 } while(1);          // endless loop
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 02A1 }
; 0000 02A2 }
;PCODE: $00000543 VOL: 0
; 0000 02A3 }
;PCODE: $00000544 VOL: 0
; 0000 02A4 
; 0000 02A5 
; 0000 02A6 //CEAS
; 0000 02A7 if (SW3 == 0) {
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
; 0000 02A8 LED1 = 1;
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
; 0000 02A9 LED2 = 0;
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 02AA LED3 = 0;
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
; 0000 02AB LED4 = 0;
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
; 0000 02AC 
; 0000 02AD delay_ms(30);   // debounce switch
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
; 0000 02AE if (SW3 == 0) {
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
; 0000 02AF while (SW3 == 0) wdogtrig();    // wait for release
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
; 0000 02B0 
; 0000 02B1 PORTA = 0x00;    // Turn OFF LEDs on PORTA
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
; 0000 02B2 
; 0000 02B3 do {
;PCODE: $00000560 VOL: 0
; 0000 02B4 
; 0000 02B5 DD0 = currentTime.ora/10;      // led 1
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
; 0000 02B6 DD0 = cifra[DD0];
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
; 0000 02B7 
; 0000 02B8 DD1 = currentTime.ora%10;      // led 2
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
; 0000 02B9 DD1 = cifra[DD1];
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
; 0000 02BA 
; 0000 02BB DD2 = currentTime.minut/10;    // led 3
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
; 0000 02BC DD2 = cifra[DD2];
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
; 0000 02BD 
; 0000 02BE DD3 = currentTime.minut%10;    // led 4
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
; 0000 02BF DD3 = cifra[DD3];
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
; 0000 02C0 
; 0000 02C1 DD4 = currentTime.secunda/10;  // led 5
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
; 0000 02C2 DD4 = cifra[DD4];
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
; 0000 02C3 
; 0000 02C4 DD5 = currentTime.secunda%10;  // led 6
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
; 0000 02C5 DD5 = cifra[DD5];
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0000 02C6 
; 0000 02C7 
; 0000 02C8 for (i = 0; i<=10; i++) {
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
; 0000 02C9 PORTA = DD0;
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
; 0000 02CA afisaj_1 = 1;      // Selectie afisaj 1
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
; 0000 02CB afisaj_2 = 0;
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
; 0000 02CC afisaj_3 = 0;
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
; 0000 02CD afisaj_4 = 0;
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
; 0000 02CE afisaj_5 = 0;
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
; 0000 02CF afisaj_6 = 0;
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
; 0000 02D0 delay_ms(1);
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
; 0000 02D1 
; 0000 02D2 PORTA = DD1;
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
; 0000 02D3 afisaj_1 = 0;      // Selectie afisaj 2
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
; 0000 02D4 afisaj_2 = 1;
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
; 0000 02D5 afisaj_3 = 0;
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
; 0000 02D6 afisaj_4 = 0;
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
; 0000 02D7 afisaj_5 = 0;
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
; 0000 02D8 afisaj_6 = 0;
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
; 0000 02D9 delay_ms(1);
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
; 0000 02DA 
; 0000 02DB PORTA = DD2;
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0000 02DC afisaj_1 = 0;      // Selectie afisaj 3
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0000 02DD afisaj_2 = 0;
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
; 0000 02DE afisaj_3 = 1;
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
; 0000 02DF afisaj_4 = 0;
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 02E0 afisaj_5 = 0;
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
; 0000 02E1 afisaj_6 = 0;
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
; 0000 02E2 delay_ms(1);
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
; 0000 02E3 
; 0000 02E4 PORTA = DD3;
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
; 0000 02E5 afisaj_1 = 0;      // Selectie afisaj 4
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0000 02E6 afisaj_2 = 0;
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
; 0000 02E7 afisaj_3 = 0;
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
; 0000 02E8 afisaj_4 = 1;
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
; 0000 02E9 afisaj_5 = 0;
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
; 0000 02EA afisaj_6 = 0;
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
; 0000 02EB delay_ms(1);
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
; 0000 02EC 
; 0000 02ED PORTA = DD4;
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
; 0000 02EE afisaj_1 = 0;      // Selectie afisaj 5
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
; 0000 02EF afisaj_2 = 0;
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
; 0000 02F0 afisaj_3 = 0;
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
; 0000 02F1 afisaj_4 = 0;
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
; 0000 02F2 afisaj_5 = 1;
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
; 0000 02F3 afisaj_6 = 0;
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
; 0000 02F4 delay_ms(1);
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
; 0000 02F5 
; 0000 02F6 PORTA = DD5;
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
; 0000 02F7 afisaj_1 = 0;      // Selectie afisaj 6
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0000 02F8 afisaj_2 = 0;
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
; 0000 02F9 afisaj_3 = 0;
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
; 0000 02FA afisaj_4 = 0;
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
; 0000 02FB afisaj_5 = 0;
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
; 0000 02FC afisaj_6 = 1;
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
; 0000 02FD delay_ms(1);
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 02FE 
; 0000 02FF 
; 0000 0300 while((currentTime.minut == minut_alarma)&&(currentTime.ora == ora_alarma)&&(ok == 0))
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
; 0000 0301 
; 0000 0302 {
; 0000 0303 while(1)
;PCODE: $00000629 VOL: 0
; 0000 0304 
; 0000 0305 {
; 0000 0306 for(i=0;i<10;i++){
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
; 0000 0307 
; 0000 0308 buzzer = 1;
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
; 0000 0309 delay_ms(1.6);
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
; 0000 030A 
; 0000 030B buzzer = 0;
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
; 0000 030C delay_ms(1.6);
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
; 0000 030D 
; 0000 030E if(SW3 == 0) break;
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
; 0000 030F if(SW4 == 0) break;
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
; 0000 0310 if(SW5 == 0) break;
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
; 0000 0311 if(SW6 == 0) break;
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
; 0000 0312 }
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
; 0000 0313 
; 0000 0314 for(i=0;i<10;i++){
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
; 0000 0315 
; 0000 0316 buzzer = 1;
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
; 0000 0317 delay_ms(1);
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0000 0318 
; 0000 0319 buzzer = 0;
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
; 0000 031A delay_ms(1);
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
; 0000 031B 
; 0000 031C if(SW3 == 0) break;
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
; 0000 031D if(SW4 == 0) break;
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
; 0000 031E if(SW5 == 0) break;
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
; 0000 031F if(SW6 == 0) break;
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
; 0000 0320 }
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
; 0000 0321 
; 0000 0322 for(i=0;i<10;i++){
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
; 0000 0323 
; 0000 0324 buzzer = 1;
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
; 0000 0325 delay_ms(2.5);
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
; 0000 0326 
; 0000 0327 buzzer = 0;
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
; 0000 0328 delay_ms(2.5);
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
; 0000 0329 
; 0000 032A if(SW3 == 0) break;
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
; 0000 032B if(SW4 == 0) break;
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
; 0000 032C if(SW5 == 0) break;
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
; 0000 032D if(SW6 == 0) break;
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
; 0000 032E }
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
; 0000 032F 
; 0000 0330 
; 0000 0331 if(SW3 == 0) break;
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
; 0000 0332 if(SW4 == 0) break;
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
; 0000 0333 if(SW5 == 0) break;
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
; 0000 0334 if(SW6 == 0) break;
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
; 0000 0335 
; 0000 0336 
; 0000 0337 
; 0000 0338 }
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
; 0000 0339 
; 0000 033A if(SW5 == 0) {ok=1; break;}
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
; 0000 033B 
; 0000 033C }
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
; 0000 033D 
; 0000 033E }
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
; 0000 033F 
; 0000 0340 
; 0000 0341 if (SW4 == 0) break;
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
; 0000 0342 if (SW5 == 0) break;
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
; 0000 0343 if (SW6 == 0) break;
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
; 0000 0344 
; 0000 0345 if (SW7 == 0) {
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
; 0000 0346 delay_ms(500);
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
; 0000 0347 if (SW7 == 0) {
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
; 0000 0348 while (SW7 == 0) {
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
; 0000 0349 currentTime.minut ++;
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
; 0000 034A afisare(currentTime.ora, currentTime.minut, currentTime.secunda);
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
; 0000 034B 
; 0000 034C 
; 0000 034D if (SW3 == 0) break;
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
; 0000 034E if (SW4 == 0) break;
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
; 0000 034F if (SW5 == 0) break;
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
; 0000 0350 if (SW6 == 0) break;
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
; 0000 0351 }
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
; 0000 0352 } else {
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
; 0000 0353 wdogtrig();
;PCODE: $00000714 VOL: 0
; 0000 0354 currentTime.minut++;
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
; 0000 0355 
; 0000 0356 do {
;PCODE: $0000071B VOL: 0
; 0000 0357 afisare(currentTime.ora, currentTime.minut, currentTime.secunda);
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
; 0000 0358 
; 0000 0359 if (SW3 == 0) break;
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
; 0000 035A if (SW4 == 0) break;
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
; 0000 035B if (SW5 == 0) break;
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
; 0000 035C if (SW6 == 0) break;
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
; 0000 035D if (SW7 == 0) break;
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
; 0000 035E if (SW8 == 0) break;
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
; 0000 035F } while(1);
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
; 0000 0360 }
;PCODE: $00000746 VOL: 0
; 0000 0361 }
; 0000 0362 
; 0000 0363 if (SW8 == 0) {
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
; 0000 0364 delay_ms(30);
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
; 0000 0365 if (SW8 == 0) {
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
; 0000 0366 while (SW8 == 0) {
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
; 0000 0367 currentTime.ora ++;
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
; 0000 0368 delay_ms(150);
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
; 0000 0369 afisare(currentTime.ora, currentTime.minut, currentTime.secunda);
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
; 0000 036A 
; 0000 036B if (SW3 == 0) break;
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
; 0000 036C if (SW4 == 0) break;
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
; 0000 036D if (SW5 == 0) break;
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
; 0000 036E if (SW6 == 0) break;
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
; 0000 036F }
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
; 0000 0370 }
; 0000 0371 }
;PCODE: $0000077D VOL: 0
; 0000 0372 } while(1);          // endless loop
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
; 0000 0373 }
; 0000 0374 }
;PCODE: $00000782 VOL: 0
; 0000 0375 }
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
; 0000 0376 }// end main loop
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
